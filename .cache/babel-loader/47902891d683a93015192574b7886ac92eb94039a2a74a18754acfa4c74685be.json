{"ast":null,"code":"import{useState,useEffect}from\"react\";import\"./QuizApp.css\";import{jsxs as _jsxs,jsx as _jsx,Fragment as _Fragment}from\"react/jsx-runtime\";const quizData=[{question:\"React là gì?\",options:[\"Thư viện JavaScript\",\"Ngôn ngữ lập trình\",\"Hệ điều hành\",\"Phần cứng\"],answer:\"Thư viện JavaScript\"},{question:\"JSX trong React là gì?\",options:[\"Java Syntax Extension\",\"JavaScript XML\",\"JavaScript Extension\",\"JSON Syntax\"],answer:\"JavaScript XML\"},{question:\"Hook trong React dùng để làm gì?\",options:[\"Quản lý state\",\"Tạo component\",\"Xử lý sự kiện\",\"Thêm style\"],answer:\"Quản lý state\"},{question:\"Component trong React là gì?\",options:[\"Một chức năng\",\"Một thành phần giao diện\",\"Một biến\",\"Một đối tượng\"],answer:\"Một thành phần giao diện\"},{question:\"State trong React được sử dụng để làm gì?\",options:[\"Lưu trữ dữ liệu động\",\"Định nghĩa CSS\",\"Tạo API\",\"Làm hiệu ứng\"],answer:\"Lưu trữ dữ liệu động\"},{question:\"Props trong React có tác dụng gì?\",options:[\"Truyền dữ liệu giữa các component\",\"Định nghĩa CSS\",\"Tạo sự kiện\",\"Lưu trữ dữ liệu động\"],answer:\"Truyền dữ liệu giữa các component\"},{question:\"React Router dùng để làm gì?\",options:[\"Quản lý route trong ứng dụng\",\"Quản lý state\",\"Tạo component\",\"Gọi API\"],answer:\"Quản lý route trong ứng dụng\"},{question:\"useEffect trong React được dùng để làm gì?\",options:[\"Xử lý side effect\",\"Tạo component\",\"Quản lý state\",\"Xử lý sự kiện\"],answer:\"Xử lý side effect\"},{question:\"React Virtual DOM có tác dụng gì?\",options:[\"Tăng hiệu suất render\",\"Lưu trữ dữ liệu\",\"Tạo API\",\"Quản lý component\"],answer:\"Tăng hiệu suất render\"},{question:\"useState trong React dùng để làm gì?\",options:[\"Quản lý state\",\"Tạo component\",\"Xử lý sự kiện\",\"Định nghĩa CSS\"],answer:\"Quản lý state\"}];export default function QuizApp(_ref){let{numQuestions}=_ref;const[studentInfo,setStudentInfo]=useState({name:\"\",id:\"\",class:\"\"});const[started,setStarted]=useState(false);const[currentQuestion,setCurrentQuestion]=useState(0);const[selectedOptions,setSelectedOptions]=useState({});const[submitted,setSubmitted]=useState(false);const[timeLeft,setTimeLeft]=useState(30*60);// 30 minutes\nconst[questionPage,setQuestionPage]=useState(0);const[isMenuVisible,setIsMenuVisible]=useState(false);const questionsPerPage=5;useEffect(()=>{if(started&&!submitted&&timeLeft>0){const timer=setInterval(()=>setTimeLeft(prev=>prev-1),1000);return()=>clearInterval(timer);}},[started,submitted,timeLeft]);const handleStart=()=>{if(studentInfo.name&&studentInfo.id&&studentInfo.class){setStarted(true);}else{alert(\"Vui lòng nhập đầy đủ thông tin sinh viên!\");}};const handleSubmit=()=>{setSubmitted(true);};const handleRetry=()=>{setCurrentQuestion(0);setSelectedOptions({});setSubmitted(false);setStarted(false);setTimeLeft(30*60);setQuestionPage(0);};const handleNextPage=()=>{if((questionPage+1)*questionsPerPage<numQuestions){setQuestionPage(questionPage+1);}};const handlePrevPage=()=>{if(questionPage>0){setQuestionPage(questionPage-1);}};const toggleMenu=()=>setIsMenuVisible(!isMenuVisible);const score=Object.keys(selectedOptions).reduce((acc,key)=>selectedOptions[key]===quizData[key].answer?acc+1:acc,0);const formatTime=seconds=>{const minutes=Math.floor(seconds/60);const secs=seconds%60;return`${minutes}:${secs<10?\"0\":\"\"}${secs}`;};const displayedQuestions=quizData.slice(0,numQuestions);// Only slice based on the selected questions\nconst getResult=()=>{const passingScore=Math.ceil(numQuestions/2);// Consider passing when user gets more than half right\nif(score>=passingScore){return`Chúc mừng! Bạn đã đạt. Điểm của bạn là ${score}/${numQuestions}.`;}else{return`Bạn chưa đạt. Điểm của bạn là ${score}/${numQuestions}. Cố gắng lần sau!`;}};return/*#__PURE__*/_jsxs(\"div\",{className:\"quiz-container\",children:[started?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"timer\",children:[\"Th\\u1EDDi gian c\\xF2n l\\u1EA1i: \",formatTime(timeLeft)]}),/*#__PURE__*/_jsx(\"button\",{className:\"menu-button\",onClick:toggleMenu,children:\"\\u2630\"}),isMenuVisible&&/*#__PURE__*/_jsx(\"div\",{className:\"question-menu\",children:/*#__PURE__*/_jsx(\"ul\",{children:displayedQuestions.map((item,index)=>/*#__PURE__*/_jsx(\"ul\",{children:/*#__PURE__*/_jsxs(\"button\",{className:`question-item ${selectedOptions[index]?\"answered\":\"unanswered\"} ${currentQuestion===index?\"active\":\"\"}`,onClick:()=>setCurrentQuestion(index),children:[\"C\\xE2u \",index+1]})},index))})}),/*#__PURE__*/_jsxs(\"div\",{className:\"question-card\",children:[/*#__PURE__*/_jsxs(\"h3\",{children:[\"C\\xE2u \",currentQuestion+1,\":\",\" \",displayedQuestions[currentQuestion].question]}),/*#__PURE__*/_jsx(\"ul\",{className:\"options-list\",children:displayedQuestions[currentQuestion].options.map((option,index)=>/*#__PURE__*/_jsx(\"li\",{className:\"option-item\",children:/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:`question-${currentQuestion}`,value:option,checked:selectedOptions[currentQuestion]===option,onChange:()=>setSelectedOptions({...selectedOptions,[currentQuestion]:option})}),option]})},index))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"question-navigation\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:handlePrevPage,disabled:questionPage===0,children:\"<\"}),displayedQuestions.slice(questionPage*questionsPerPage,(questionPage+1)*questionsPerPage).map((_,index)=>/*#__PURE__*/_jsx(\"button\",{className:\"question-nav-button\",onClick:()=>setCurrentQuestion(questionPage*questionsPerPage+index),children:questionPage*questionsPerPage+index+1},index)),/*#__PURE__*/_jsx(\"button\",{onClick:handleNextPage,disabled:(questionPage+1)*questionsPerPage>=displayedQuestions.length,children:\">\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"button-container\",children:/*#__PURE__*/_jsx(\"button\",{className:\"submit-button\",onClick:handleSubmit,children:\"N\\u1ED9p b\\xE0i\"})})]}):/*#__PURE__*/_jsxs(\"div\",{className:\"student-info\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Nh\\u1EADp th\\xF4ng tin sinh vi\\xEAn\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"H\\u1ECD v\\xE0 t\\xEAn\",value:studentInfo.name,onChange:e=>setStudentInfo({...studentInfo,name:e.target.value})}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"M\\xE3 sinh vi\\xEAn\",value:studentInfo.id,onChange:e=>setStudentInfo({...studentInfo,id:e.target.value})}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"T\\xEAn L\\u1EDBp\",value:studentInfo.class,onChange:e=>setStudentInfo({...studentInfo,class:e.target.value})}),/*#__PURE__*/_jsx(\"button\",{className:\"start-button\",onClick:handleStart,children:\"B\\u1EAFt \\u0111\\u1EA7u thi\"})]}),submitted&&/*#__PURE__*/_jsxs(\"div\",{className:\"result\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"K\\u1EBFt qu\\u1EA3 thi\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"H\\u1ECD v\\xE0 t\\xEAn: \",studentInfo.name]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"M\\xE3 sinh vi\\xEAn: \",studentInfo.id]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"L\\u1EDBp: \",studentInfo.class]}),/*#__PURE__*/_jsx(\"p\",{children:getResult()}),/*#__PURE__*/_jsx(\"button\",{className:\"retry-button\",onClick:handleRetry,children:\"Th\\u1EED l\\u1EA1i\"})]})]});}","map":{"version":3,"names":["useState","useEffect","jsxs","_jsxs","jsx","_jsx","Fragment","_Fragment","quizData","question","options","answer","QuizApp","_ref","numQuestions","studentInfo","setStudentInfo","name","id","class","started","setStarted","currentQuestion","setCurrentQuestion","selectedOptions","setSelectedOptions","submitted","setSubmitted","timeLeft","setTimeLeft","questionPage","setQuestionPage","isMenuVisible","setIsMenuVisible","questionsPerPage","timer","setInterval","prev","clearInterval","handleStart","alert","handleSubmit","handleRetry","handleNextPage","handlePrevPage","toggleMenu","score","Object","keys","reduce","acc","key","formatTime","seconds","minutes","Math","floor","secs","displayedQuestions","slice","getResult","passingScore","ceil","className","children","onClick","map","item","index","option","type","value","checked","onChange","disabled","_","length","placeholder","e","target"],"sources":["E:/textweb2/test-app/src/QuizApp.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport \"./QuizApp.css\";\r\n\r\nconst quizData = [\r\n  {\r\n    question: \"React là gì?\",\r\n    options: [\r\n      \"Thư viện JavaScript\",\r\n      \"Ngôn ngữ lập trình\",\r\n      \"Hệ điều hành\",\r\n      \"Phần cứng\",\r\n    ],\r\n    answer: \"Thư viện JavaScript\",\r\n  },\r\n  {\r\n    question: \"JSX trong React là gì?\",\r\n    options: [\r\n      \"Java Syntax Extension\",\r\n      \"JavaScript XML\",\r\n      \"JavaScript Extension\",\r\n      \"JSON Syntax\",\r\n    ],\r\n    answer: \"JavaScript XML\",\r\n  },\r\n  {\r\n    question: \"Hook trong React dùng để làm gì?\",\r\n    options: [\"Quản lý state\", \"Tạo component\", \"Xử lý sự kiện\", \"Thêm style\"],\r\n    answer: \"Quản lý state\",\r\n  },\r\n  {\r\n    question: \"Component trong React là gì?\",\r\n    options: [\r\n      \"Một chức năng\",\r\n      \"Một thành phần giao diện\",\r\n      \"Một biến\",\r\n      \"Một đối tượng\",\r\n    ],\r\n    answer: \"Một thành phần giao diện\",\r\n  },\r\n  {\r\n    question: \"State trong React được sử dụng để làm gì?\",\r\n    options: [\r\n      \"Lưu trữ dữ liệu động\",\r\n      \"Định nghĩa CSS\",\r\n      \"Tạo API\",\r\n      \"Làm hiệu ứng\",\r\n    ],\r\n    answer: \"Lưu trữ dữ liệu động\",\r\n  },\r\n  {\r\n    question: \"Props trong React có tác dụng gì?\",\r\n    options: [\r\n      \"Truyền dữ liệu giữa các component\",\r\n      \"Định nghĩa CSS\",\r\n      \"Tạo sự kiện\",\r\n      \"Lưu trữ dữ liệu động\",\r\n    ],\r\n    answer: \"Truyền dữ liệu giữa các component\",\r\n  },\r\n  {\r\n    question: \"React Router dùng để làm gì?\",\r\n    options: [\r\n      \"Quản lý route trong ứng dụng\",\r\n      \"Quản lý state\",\r\n      \"Tạo component\",\r\n      \"Gọi API\",\r\n    ],\r\n    answer: \"Quản lý route trong ứng dụng\",\r\n  },\r\n  {\r\n    question: \"useEffect trong React được dùng để làm gì?\",\r\n    options: [\r\n      \"Xử lý side effect\",\r\n      \"Tạo component\",\r\n      \"Quản lý state\",\r\n      \"Xử lý sự kiện\",\r\n    ],\r\n    answer: \"Xử lý side effect\",\r\n  },\r\n  {\r\n    question: \"React Virtual DOM có tác dụng gì?\",\r\n    options: [\r\n      \"Tăng hiệu suất render\",\r\n      \"Lưu trữ dữ liệu\",\r\n      \"Tạo API\",\r\n      \"Quản lý component\",\r\n    ],\r\n    answer: \"Tăng hiệu suất render\",\r\n  },\r\n  {\r\n    question: \"useState trong React dùng để làm gì?\",\r\n    options: [\r\n      \"Quản lý state\",\r\n      \"Tạo component\",\r\n      \"Xử lý sự kiện\",\r\n      \"Định nghĩa CSS\",\r\n    ],\r\n    answer: \"Quản lý state\",\r\n  },\r\n];\r\n\r\nexport default function QuizApp({ numQuestions }) {\r\n  const [studentInfo, setStudentInfo] = useState({\r\n    name: \"\",\r\n    id: \"\",\r\n    class: \"\",\r\n  });\r\n  const [started, setStarted] = useState(false);\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [selectedOptions, setSelectedOptions] = useState({});\r\n  const [submitted, setSubmitted] = useState(false);\r\n  const [timeLeft, setTimeLeft] = useState(30 * 60); // 30 minutes\r\n  const [questionPage, setQuestionPage] = useState(0);\r\n  const [isMenuVisible, setIsMenuVisible] = useState(false);\r\n\r\n  const questionsPerPage = 5;\r\n\r\n  useEffect(() => {\r\n    if (started && !submitted && timeLeft > 0) {\r\n      const timer = setInterval(() => setTimeLeft((prev) => prev - 1), 1000);\r\n      return () => clearInterval(timer);\r\n    }\r\n  }, [started, submitted, timeLeft]);\r\n\r\n  const handleStart = () => {\r\n    if (studentInfo.name && studentInfo.id && studentInfo.class) {\r\n      setStarted(true);\r\n    } else {\r\n      alert(\"Vui lòng nhập đầy đủ thông tin sinh viên!\");\r\n    }\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    setSubmitted(true);\r\n  };\r\n\r\n  const handleRetry = () => {\r\n    setCurrentQuestion(0);\r\n    setSelectedOptions({});\r\n    setSubmitted(false);\r\n    setStarted(false);\r\n    setTimeLeft(30 * 60);\r\n    setQuestionPage(0);\r\n  };\r\n\r\n  const handleNextPage = () => {\r\n    if ((questionPage + 1) * questionsPerPage < numQuestions) {\r\n      setQuestionPage(questionPage + 1);\r\n    }\r\n  };\r\n\r\n  const handlePrevPage = () => {\r\n    if (questionPage > 0) {\r\n      setQuestionPage(questionPage - 1);\r\n    }\r\n  };\r\n\r\n  const toggleMenu = () => setIsMenuVisible(!isMenuVisible);\r\n\r\n  const score = Object.keys(selectedOptions).reduce(\r\n    (acc, key) =>\r\n      selectedOptions[key] === quizData[key].answer ? acc + 1 : acc,\r\n    0\r\n  );\r\n\r\n  const formatTime = (seconds) => {\r\n    const minutes = Math.floor(seconds / 60);\r\n    const secs = seconds % 60;\r\n    return `${minutes}:${secs < 10 ? \"0\" : \"\"}${secs}`;\r\n  };\r\n\r\n  const displayedQuestions = quizData.slice(0, numQuestions); // Only slice based on the selected questions\r\n\r\n  const getResult = () => {\r\n    const passingScore = Math.ceil(numQuestions / 2); // Consider passing when user gets more than half right\r\n    if (score >= passingScore) {\r\n      return `Chúc mừng! Bạn đã đạt. Điểm của bạn là ${score}/${numQuestions}.`;\r\n    } else {\r\n      return `Bạn chưa đạt. Điểm của bạn là ${score}/${numQuestions}. Cố gắng lần sau!`;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"quiz-container\">\r\n      \r\n      \r\n      {started ? (\r\n        <>\r\n          <div className=\"timer\">Thời gian còn lại: {formatTime(timeLeft)}</div>\r\n          <button className=\"menu-button\" onClick={toggleMenu}>\r\n            &#9776;\r\n          </button>\r\n\r\n          {isMenuVisible && (\r\n            <div className=\"question-menu\">\r\n              \r\n              <ul>\r\n                {displayedQuestions.map((item, index) => (\r\n                  <ul key={index}>\r\n                    <button\r\n                      className={`question-item ${\r\n                        selectedOptions[index] ? \"answered\" : \"unanswered\"\r\n                      } ${currentQuestion === index ? \"active\" : \"\"}`}\r\n                      onClick={() => setCurrentQuestion(index)}\r\n                    >\r\n                      Câu {index + 1}\r\n                    </button>\r\n                    \r\n                  </ul>\r\n                ))}\r\n              </ul>\r\n              \r\n              \r\n             \r\n              \r\n              \r\n              \r\n              \r\n            </div>\r\n            \r\n            \r\n          )}\r\n        \r\n        \r\n          <div className=\"question-card\">\r\n            <h3>\r\n              Câu {currentQuestion + 1}:{\" \"}\r\n              {displayedQuestions[currentQuestion].question}\r\n            </h3>\r\n            <ul className=\"options-list\">\r\n              {displayedQuestions[currentQuestion].options.map(\r\n                (option, index) => (\r\n                  <li key={index} className=\"option-item\">\r\n                    <label>\r\n                      <input\r\n                        type=\"radio\"\r\n                        name={`question-${currentQuestion}`}\r\n                        value={option}\r\n                        checked={selectedOptions[currentQuestion] === option}\r\n                        onChange={() =>\r\n                          setSelectedOptions({\r\n                            ...selectedOptions,\r\n                            [currentQuestion]: option,\r\n                          })\r\n                        }\r\n                      />\r\n                      {option}\r\n                    </label>\r\n                  </li>\r\n                )\r\n              )}\r\n            </ul>\r\n          </div>\r\n\r\n          <div className=\"question-navigation\">\r\n            <button onClick={handlePrevPage} disabled={questionPage === 0}>\r\n              &lt;\r\n            </button>\r\n            {displayedQuestions\r\n              .slice(\r\n                questionPage * questionsPerPage,\r\n                (questionPage + 1) * questionsPerPage\r\n              )\r\n              .map((_, index) => (\r\n                <button\r\n                  key={index}\r\n                  className=\"question-nav-button\"\r\n                  onClick={() =>\r\n                    setCurrentQuestion(questionPage * questionsPerPage + index)\r\n                  }\r\n                >\r\n                  {questionPage * questionsPerPage + index + 1}\r\n                </button>\r\n              ))}\r\n            <button\r\n              onClick={handleNextPage}\r\n              disabled={\r\n                (questionPage + 1) * questionsPerPage >=\r\n                displayedQuestions.length\r\n              }\r\n            >\r\n              &gt;\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"button-container\">\r\n            <button className=\"submit-button\" onClick={handleSubmit}>\r\n              Nộp bài\r\n            </button>\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <div className=\"student-info\">\r\n          <h3>Nhập thông tin sinh viên</h3>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Họ và tên\"\r\n            value={studentInfo.name}\r\n            onChange={(e) =>\r\n              setStudentInfo({ ...studentInfo, name: e.target.value })\r\n            }\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Mã sinh viên\"\r\n            value={studentInfo.id}\r\n            onChange={(e) =>\r\n              setStudentInfo({ ...studentInfo, id: e.target.value })\r\n            }\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Tên Lớp\"\r\n            value={studentInfo.class}\r\n            onChange={(e) =>\r\n              setStudentInfo({ ...studentInfo, class: e.target.value })\r\n            }\r\n          />\r\n          <button className=\"start-button\" onClick={handleStart}>\r\n            Bắt đầu thi\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      {/* Show the result after submission */}\r\n      {submitted && (\r\n        <div className=\"result\">\r\n          <h3>Kết quả thi</h3>\r\n          <p>Họ và tên: {studentInfo.name}</p>\r\n          <p>Mã sinh viên: {studentInfo.id}</p>\r\n          <p>Lớp: {studentInfo.class}</p>\r\n          <p>{getResult()}</p>\r\n          <button className=\"retry-button\" onClick={handleRetry}>\r\n            Thử lại\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}