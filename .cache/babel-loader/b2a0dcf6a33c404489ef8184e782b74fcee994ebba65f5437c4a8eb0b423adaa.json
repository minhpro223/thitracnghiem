{"ast":null,"code":"var _jsxFileName = \"E:\\\\textweb2\\\\test-app\\\\src\\\\QuizApp.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction QuizApp() {\n  _s();\n  const [studentData, setStudentData] = useState(null);\n  const [examConfig, setExamConfig] = useState(null);\n  useEffect(() => {\n    const storedStudent = JSON.parse(localStorage.getItem(\"studentData\"));\n    const storedExam = JSON.parse(localStorage.getItem(\"examConfig\"));\n    setStudentData(storedStudent);\n    setExamConfig(storedExam);\n  }, []);\n  if (!studentData || !examConfig) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"\\u0110ang t\\u1EA3i d\\u1EEF li\\u1EC7u...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 43\n  }, this);\n  const exam = examConfig.examCodes.find(e => e.code === studentData.examCode);\n\n  // ✅ Sửa dòng này:\n  if (!exam || !exam.questionsData) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Kh\\xF4ng t\\xECm th\\u1EA5y \\u0111\\u1EC1 thi ph\\xF9 h\\u1EE3p!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 44\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"\\u0110\\u1EC1 \", studentData.examCode, \" - Ph\\xF2ng \", studentData.roomName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"H\\u1ECD t\\xEAn: \", studentData.studentName, \" - MSSV: \", studentData.studentId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"S\\u1ED1 c\\xE2u h\\u1ECFi: \", exam.questionsData.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), exam.questionsData.map((q, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"C\\xE2u \", index + 1, \": \", q.questionText]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), q.options.map((opt, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: `q${index}`,\n            value: i\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 17\n          }, this), String.fromCharCode(65 + i), \". \", opt]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this))]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(QuizApp, \"DgbvA0hrIhwVjO/Z1KSqVcub4nw=\");\n_c = QuizApp;\nexport default QuizApp;\nvar _c;\n$RefreshReg$(_c, \"QuizApp\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","QuizApp","_s","studentData","setStudentData","examConfig","setExamConfig","storedStudent","JSON","parse","localStorage","getItem","storedExam","children","fileName","_jsxFileName","lineNumber","columnNumber","exam","examCodes","find","e","code","examCode","questionsData","className","roomName","studentName","studentId","length","map","q","index","questionText","options","opt","i","type","name","value","String","fromCharCode","_c","$RefreshReg$"],"sources":["E:/textweb2/test-app/src/QuizApp.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nfunction QuizApp() {\r\n  const [studentData, setStudentData] = useState(null);\r\n  const [examConfig, setExamConfig] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const storedStudent = JSON.parse(localStorage.getItem(\"studentData\"));\r\n    const storedExam = JSON.parse(localStorage.getItem(\"examConfig\"));\r\n    setStudentData(storedStudent);\r\n    setExamConfig(storedExam);\r\n  }, []);\r\n\r\n  if (!studentData || !examConfig) return <p>Đang tải dữ liệu...</p>;\r\n\r\n  const exam = examConfig.examCodes.find(\r\n    (e) => e.code === studentData.examCode\r\n  );\r\n\r\n  // ✅ Sửa dòng này:\r\n  if (!exam || !exam.questionsData) return <p>Không tìm thấy đề thi phù hợp!</p>;\r\n\r\n  return (\r\n    <div className=\"quiz-container\">\r\n      <h2>\r\n        Đề {studentData.examCode} - Phòng {studentData.roomName}\r\n      </h2>\r\n      <p>\r\n        Họ tên: {studentData.studentName} - MSSV: {studentData.studentId}\r\n      </p>\r\n      <p>\r\n        Số câu hỏi: {exam.questionsData.length}\r\n      </p>\r\n\r\n      {exam.questionsData.map((q, index) => (\r\n        <div key={index} className=\"question-box\">\r\n          <h4>\r\n            Câu {index + 1}: {q.questionText}\r\n          </h4>\r\n          {q.options.map((opt, i) => (\r\n            <div key={i}>\r\n              <label>\r\n                <input type=\"radio\" name={`q${index}`} value={i} />\r\n                {String.fromCharCode(65 + i)}. {opt}\r\n              </label>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default QuizApp;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}