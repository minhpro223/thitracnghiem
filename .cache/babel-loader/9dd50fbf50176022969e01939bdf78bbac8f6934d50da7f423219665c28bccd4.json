{"ast":null,"code":"var _jsxFileName = \"E:\\\\textweb2\\\\test-app\\\\src\\\\QuizApp.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuizApp = ({\n  numQuestions\n}) => {\n  _s();\n  // Sample questions and answers (you can replace these with real quiz data)\n  const questions = [{\n    question: \"Câu hỏi 1: 2 + 2 = ?\",\n    options: [\"1\", \"2\", \"3\", \"4\"],\n    correctAnswer: \"4\"\n  }, {\n    question: \"Câu hỏi 2: 3 + 5 = ?\",\n    options: [\"6\", \"7\", \"8\", \"9\"],\n    correctAnswer: \"8\"\n  }, {\n    question: \"Câu hỏi 3: 10 - 3 = ?\",\n    options: [\"6\", \"7\", \"8\", \"9\"],\n    correctAnswer: \"7\"\n  }, {\n    question: \"Câu hỏi 4: 5 * 6 = ?\",\n    options: [\"28\", \"30\", \"32\", \"35\"],\n    correctAnswer: \"30\"\n  }, {\n    question: \"Câu hỏi 5: 12 ÷ 4 = ?\",\n    options: [\"2\", \"3\", \"4\", \"5\"],\n    correctAnswer: \"3\"\n  }, {\n    question: \"Câu hỏi 6: 9 - 5 = ?\",\n    options: [\"3\", \"4\", \"5\", \"6\"],\n    correctAnswer: \"4\"\n  }, {\n    question: \"Câu hỏi 7: 8 * 3 = ?\",\n    options: [\"22\", \"24\", \"26\", \"28\"],\n    correctAnswer: \"24\"\n  }, {\n    question: \"Câu hỏi 8: 15 + 5 = ?\",\n    options: [\"18\", \"20\", \"22\", \"24\"],\n    correctAnswer: \"20\"\n  }, {\n    question: \"Câu hỏi 9: 18 ÷ 6 = ?\",\n    options: [\"2\", \"3\", \"4\", \"5\"],\n    correctAnswer: \"3\"\n  }, {\n    question: \"Câu hỏi 10: 7 * 5 = ?\",\n    options: [\"30\", \"35\", \"40\", \"45\"],\n    correctAnswer: \"35\"\n  }];\n\n  // State to track the user's answers\n  const [answers, setAnswers] = useState(Array(numQuestions).fill(null)); // Track answers for each question\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0); // Track current question\n  const [score, setScore] = useState(0); // Track user's score\n  const [quizFinished, setQuizFinished] = useState(false); // Track if quiz is finished\n\n  const handleAnswerSelect = selectedAnswer => {\n    const newAnswers = [...answers];\n    newAnswers[currentQuestionIndex] = selectedAnswer;\n    setAnswers(newAnswers);\n  };\n  const handleNextQuestion = () => {\n    if (currentQuestionIndex < numQuestions - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    } else {\n      // If this is the last question, finish the quiz\n      setQuizFinished(true);\n      calculateScore();\n    }\n  };\n  const calculateScore = () => {\n    let userScore = 0;\n    questions.slice(0, numQuestions).forEach((question, index) => {\n      if (answers[index] === question.correctAnswer) {\n        userScore++;\n      }\n    });\n    setScore(userScore);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-app\",\n    children: quizFinished ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-finished\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"K\\u1EBFt qu\\u1EA3 c\\u1EE7a b\\u1EA1n\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u0110i\\u1EC3m c\\u1EE7a b\\u1EA1n: \", score, \"/\", numQuestions]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-question\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: questions[currentQuestionIndex].question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quiz-options\",\n        children: questions[currentQuestionIndex].options.map((option, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `quiz-option ${answers[currentQuestionIndex] === option ? \"selected\" : \"\"}`,\n          onClick: () => handleAnswerSelect(option),\n          children: option\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quiz-navigation\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"next-button\",\n          onClick: handleNextQuestion,\n          disabled: answers[currentQuestionIndex] === null,\n          children: currentQuestionIndex === numQuestions - 1 ? \"Hoàn thành\" : \"Câu tiếp theo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n_s(QuizApp, \"kA+uOvUm/g4SgtjtCE6bZmV9C4M=\");\n_c = QuizApp;\nexport default QuizApp;\nvar _c;\n$RefreshReg$(_c, \"QuizApp\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","QuizApp","numQuestions","_s","questions","question","options","correctAnswer","answers","setAnswers","Array","fill","currentQuestionIndex","setCurrentQuestionIndex","score","setScore","quizFinished","setQuizFinished","handleAnswerSelect","selectedAnswer","newAnswers","handleNextQuestion","calculateScore","userScore","slice","forEach","index","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","option","onClick","disabled","_c","$RefreshReg$"],"sources":["E:/textweb2/test-app/src/QuizApp.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst QuizApp = ({ numQuestions }) => {\r\n  // Sample questions and answers (you can replace these with real quiz data)\r\n  const questions = [\r\n    {\r\n      question: \"Câu hỏi 1: 2 + 2 = ?\",\r\n      options: [\"1\", \"2\", \"3\", \"4\"],\r\n      correctAnswer: \"4\",\r\n    },\r\n    {\r\n      question: \"Câu hỏi 2: 3 + 5 = ?\",\r\n      options: [\"6\", \"7\", \"8\", \"9\"],\r\n      correctAnswer: \"8\",\r\n    },\r\n    {\r\n      question: \"Câu hỏi 3: 10 - 3 = ?\",\r\n      options: [\"6\", \"7\", \"8\", \"9\"],\r\n      correctAnswer: \"7\",\r\n    },\r\n    {\r\n      question: \"Câu hỏi 4: 5 * 6 = ?\",\r\n      options: [\"28\", \"30\", \"32\", \"35\"],\r\n      correctAnswer: \"30\",\r\n    },\r\n    {\r\n      question: \"Câu hỏi 5: 12 ÷ 4 = ?\",\r\n      options: [\"2\", \"3\", \"4\", \"5\"],\r\n      correctAnswer: \"3\",\r\n    },\r\n    {\r\n      question: \"Câu hỏi 6: 9 - 5 = ?\",\r\n      options: [\"3\", \"4\", \"5\", \"6\"],\r\n      correctAnswer: \"4\",\r\n    },\r\n    {\r\n      question: \"Câu hỏi 7: 8 * 3 = ?\",\r\n      options: [\"22\", \"24\", \"26\", \"28\"],\r\n      correctAnswer: \"24\",\r\n    },\r\n    {\r\n      question: \"Câu hỏi 8: 15 + 5 = ?\",\r\n      options: [\"18\", \"20\", \"22\", \"24\"],\r\n      correctAnswer: \"20\",\r\n    },\r\n    {\r\n      question: \"Câu hỏi 9: 18 ÷ 6 = ?\",\r\n      options: [\"2\", \"3\", \"4\", \"5\"],\r\n      correctAnswer: \"3\",\r\n    },\r\n    {\r\n      question: \"Câu hỏi 10: 7 * 5 = ?\",\r\n      options: [\"30\", \"35\", \"40\", \"45\"],\r\n      correctAnswer: \"35\",\r\n    },\r\n  ];\r\n\r\n  // State to track the user's answers\r\n  const [answers, setAnswers] = useState(Array(numQuestions).fill(null)); // Track answers for each question\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0); // Track current question\r\n  const [score, setScore] = useState(0); // Track user's score\r\n  const [quizFinished, setQuizFinished] = useState(false); // Track if quiz is finished\r\n\r\n  const handleAnswerSelect = (selectedAnswer) => {\r\n    const newAnswers = [...answers];\r\n    newAnswers[currentQuestionIndex] = selectedAnswer;\r\n    setAnswers(newAnswers);\r\n  };\r\n\r\n  const handleNextQuestion = () => {\r\n    if (currentQuestionIndex < numQuestions - 1) {\r\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\r\n    } else {\r\n      // If this is the last question, finish the quiz\r\n      setQuizFinished(true);\r\n      calculateScore();\r\n    }\r\n  };\r\n\r\n  const calculateScore = () => {\r\n    let userScore = 0;\r\n    questions.slice(0, numQuestions).forEach((question, index) => {\r\n      if (answers[index] === question.correctAnswer) {\r\n        userScore++;\r\n      }\r\n    });\r\n    setScore(userScore);\r\n  };\r\n\r\n  return (\r\n    <div className=\"quiz-app\">\r\n      {quizFinished ? (\r\n        <div className=\"quiz-finished\">\r\n          <h2>Kết quả của bạn</h2>\r\n          <p>\r\n            Điểm của bạn: {score}/{numQuestions}\r\n          </p>\r\n        </div>\r\n      ) : (\r\n        <div className=\"quiz-question\">\r\n          <h3>{questions[currentQuestionIndex].question}</h3>\r\n          <div className=\"quiz-options\">\r\n            {questions[currentQuestionIndex].options.map((option, index) => (\r\n              <button\r\n                key={index}\r\n                className={`quiz-option ${\r\n                  answers[currentQuestionIndex] === option ? \"selected\" : \"\"\r\n                }`}\r\n                onClick={() => handleAnswerSelect(option)}\r\n              >\r\n                {option}\r\n              </button>\r\n            ))}\r\n          </div>\r\n          <div className=\"quiz-navigation\">\r\n            <button\r\n              className=\"next-button\"\r\n              onClick={handleNextQuestion}\r\n              disabled={answers[currentQuestionIndex] === null}\r\n            >\r\n              {currentQuestionIndex === numQuestions - 1\r\n                ? \"Hoàn thành\"\r\n                : \"Câu tiếp theo\"}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuizApp;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}