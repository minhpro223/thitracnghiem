{"ast":null,"code":"var _jsxFileName = \"E:\\\\textweb2\\\\test-app\\\\src\\\\QuizApp.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport \"./QuizApp.css\";\nimport QuizForm from \"./QuizForm\"; // Nhớ đúng đường dẫn file QuizForm\n\n// ...\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n{\n  showQuizModal && /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-form-container\",\n    children: /*#__PURE__*/_jsxDEV(QuizForm, {\n      numberOfQuestions: numberOfQuestions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 3\n  }, this);\n}\nconst quizData = [{\n  question: \"React là gì?\",\n  options: [\"Thư viện JavaScript\", \"Ngôn ngữ lập trình\", \"Hệ điều hành\", \"Phần cứng\"],\n  answer: \"Thư viện JavaScript\"\n}, {\n  question: \"JSX trong React là gì?\",\n  options: [\"Java Syntax Extension\", \"JavaScript XML\", \"JavaScript Extension\", \"JSON Syntax\"],\n  answer: \"JavaScript XML\"\n}, {\n  question: \"Hook trong React dùng để làm gì?\",\n  options: [\"Quản lý state\", \"Tạo component\", \"Xử lý sự kiện\", \"Thêm style\"],\n  answer: \"Quản lý state\"\n}, {\n  question: \"Component trong React là gì?\",\n  options: [\"Một chức năng\", \"Một thành phần giao diện\", \"Một biến\", \"Một đối tượng\"],\n  answer: \"Một thành phần giao diện\"\n}, {\n  question: \"State trong React được sử dụng để làm gì?\",\n  options: [\"Lưu trữ dữ liệu động\", \"Định nghĩa CSS\", \"Tạo API\", \"Làm hiệu ứng\"],\n  answer: \"Lưu trữ dữ liệu động\"\n}, {\n  question: \"Props trong React có tác dụng gì?\",\n  options: [\"Truyền dữ liệu giữa các component\", \"Định nghĩa CSS\", \"Tạo sự kiện\", \"Lưu trữ dữ liệu động\"],\n  answer: \"Truyền dữ liệu giữa các component\"\n}, {\n  question: \"React Router dùng để làm gì?\",\n  options: [\"Quản lý route trong ứng dụng\", \"Quản lý state\", \"Tạo component\", \"Gọi API\"],\n  answer: \"Quản lý route trong ứng dụng\"\n}, {\n  question: \"useEffect trong React được dùng để làm gì?\",\n  options: [\"Xử lý side effect\", \"Tạo component\", \"Quản lý state\", \"Xử lý sự kiện\"],\n  answer: \"Xử lý side effect\"\n}, {\n  question: \"React Virtual DOM có tác dụng gì?\",\n  options: [\"Tăng hiệu suất render\", \"Lưu trữ dữ liệu\", \"Tạo API\", \"Quản lý component\"],\n  answer: \"Tăng hiệu suất render\"\n}, {\n  question: \"useState trong React dùng để làm gì?\",\n  options: [\"Quản lý state\", \"Tạo component\", \"Xử lý sự kiện\", \"Định nghĩa CSS\"],\n  answer: \"Quản lý state\"\n}];\nexport default function QuizApp({\n  numQuestions\n}) {\n  _s();\n  const [studentInfo, setStudentInfo] = useState({\n    name: \"\",\n    id: \"\",\n    class: \"\"\n  });\n  const [started, setStarted] = useState(false);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [selectedOptions, setSelectedOptions] = useState({});\n  const [submitted, setSubmitted] = useState(false);\n  const [timeLeft, setTimeLeft] = useState(30 * 60); // 30 minutes\n  const [questionPage, setQuestionPage] = useState(0);\n  const [isMenuVisible, setIsMenuVisible] = useState(false);\n  const questionsPerPage = 5;\n  useEffect(() => {\n    if (started && !submitted && timeLeft > 0) {\n      const timer = setInterval(() => setTimeLeft(prev => prev - 1), 1000);\n      return () => clearInterval(timer);\n    }\n  }, [started, submitted, timeLeft]);\n  const handleStart = () => {\n    if (studentInfo.name && studentInfo.id && studentInfo.class) {\n      setStarted(true);\n    } else {\n      alert(\"Vui lòng nhập đầy đủ thông tin sinh viên!\");\n    }\n  };\n  const handleSubmit = () => {\n    setSubmitted(true);\n  };\n  const handleRetry = () => {\n    setCurrentQuestion(0);\n    setSelectedOptions({});\n    setSubmitted(false);\n    setStarted(false);\n    setTimeLeft(30 * 60);\n    setQuestionPage(0);\n  };\n  const handleNextPage = () => {\n    if ((questionPage + 1) * questionsPerPage < numQuestions) {\n      setQuestionPage(questionPage + 1);\n    }\n  };\n  const handlePrevPage = () => {\n    if (questionPage > 0) {\n      setQuestionPage(questionPage - 1);\n    }\n  };\n  const toggleMenu = () => setIsMenuVisible(!isMenuVisible);\n  const score = Object.keys(selectedOptions).reduce((acc, key) => selectedOptions[key] === quizData[key].answer ? acc + 1 : acc, 0);\n  const formatTime = seconds => {\n    const minutes = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${minutes}:${secs < 10 ? \"0\" : \"\"}${secs}`;\n  };\n  const displayedQuestions = quizData.slice(0, numQuestions); // Only slice based on the selected questions\n\n  const getResult = () => {\n    const passingScore = Math.ceil(numQuestions / 2); // Consider passing when user gets more than half right\n    if (score >= passingScore) {\n      return `Chúc mừng! Bạn đã đạt. Điểm của bạn là ${score}/${numQuestions}.`;\n    } else {\n      return `Bạn chưa đạt. Điểm của bạn là ${score}/${numQuestions}. Cố gắng lần sau!`;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-container\",\n    children: [started ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timer\",\n        children: [\"Th\\u1EDDi gian c\\xF2n l\\u1EA1i: \", formatTime(timeLeft)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"menu-button\",\n        onClick: toggleMenu,\n        children: \"\\u2630\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 11\n      }, this), isMenuVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-menu\",\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          children: displayedQuestions.map((item, index) => /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `question-item ${selectedOptions[index] ? \"answered\" : \"unanswered\"} ${currentQuestion === index ? \"active\" : \"\"}`,\n              onClick: () => setCurrentQuestion(index),\n              children: [\"C\\xE2u \", index + 1]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 21\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"ch\\u01B0a tr\\u1EA3 l\\u1EDDi\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\u0111\\xE3 tr\\u1EA3 l\\u1EDDi\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"C\\xE2u \", currentQuestion + 1, \":\", \" \", displayedQuestions[currentQuestion].question]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"options-list\",\n          children: displayedQuestions[currentQuestion].options.map((option, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"option-item\",\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                name: `question-${currentQuestion}`,\n                value: option,\n                checked: selectedOptions[currentQuestion] === option,\n                onChange: () => setSelectedOptions({\n                  ...selectedOptions,\n                  [currentQuestion]: option\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 23\n              }, this), option]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 21\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-navigation\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handlePrevPage,\n          disabled: questionPage === 0,\n          children: \"<\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 13\n        }, this), displayedQuestions.slice(questionPage * questionsPerPage, (questionPage + 1) * questionsPerPage).map((_, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"question-nav-button\",\n          onClick: () => setCurrentQuestion(questionPage * questionsPerPage + index),\n          children: questionPage * questionsPerPage + index + 1\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 17\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleNextPage,\n          disabled: (questionPage + 1) * questionsPerPage >= displayedQuestions.length,\n          children: \">\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"submit-button\",\n          onClick: handleSubmit,\n          children: \"N\\u1ED9p b\\xE0i\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"student-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Nh\\u1EADp th\\xF4ng tin sinh vi\\xEAn\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"H\\u1ECD v\\xE0 t\\xEAn\",\n        value: studentInfo.name,\n        onChange: e => setStudentInfo({\n          ...studentInfo,\n          name: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"M\\xE3 sinh vi\\xEAn\",\n        value: studentInfo.id,\n        onChange: e => setStudentInfo({\n          ...studentInfo,\n          id: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"T\\xEAn L\\u1EDBp\",\n        value: studentInfo.class,\n        onChange: e => setStudentInfo({\n          ...studentInfo,\n          class: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"start-button\",\n        onClick: handleStart,\n        children: \"B\\u1EAFt \\u0111\\u1EA7u thi\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 9\n    }, this), submitted && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"K\\u1EBFt qu\\u1EA3 thi\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"H\\u1ECD v\\xE0 t\\xEAn: \", studentInfo.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"M\\xE3 sinh vi\\xEAn: \", studentInfo.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"L\\u1EDBp: \", studentInfo.class]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: getResult()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"retry-button\",\n        onClick: handleRetry,\n        children: \"Th\\u1EED l\\u1EA1i\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 193,\n    columnNumber: 5\n  }, this);\n}\n_s(QuizApp, \"+CKHzfJhGx4UyJyKzTNN4oV/fOg=\");\n_c = QuizApp;\nvar _c;\n$RefreshReg$(_c, \"QuizApp\");","map":{"version":3,"names":["useState","useEffect","QuizForm","jsxDEV","_jsxDEV","Fragment","_Fragment","showQuizModal","className","children","numberOfQuestions","fileName","_jsxFileName","lineNumber","columnNumber","quizData","question","options","answer","QuizApp","numQuestions","_s","studentInfo","setStudentInfo","name","id","class","started","setStarted","currentQuestion","setCurrentQuestion","selectedOptions","setSelectedOptions","submitted","setSubmitted","timeLeft","setTimeLeft","questionPage","setQuestionPage","isMenuVisible","setIsMenuVisible","questionsPerPage","timer","setInterval","prev","clearInterval","handleStart","alert","handleSubmit","handleRetry","handleNextPage","handlePrevPage","toggleMenu","score","Object","keys","reduce","acc","key","formatTime","seconds","minutes","Math","floor","secs","displayedQuestions","slice","getResult","passingScore","ceil","onClick","map","item","index","option","type","value","checked","onChange","disabled","_","length","placeholder","e","target","_c","$RefreshReg$"],"sources":["E:/textweb2/test-app/src/QuizApp.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport \"./QuizApp.css\";\r\nimport QuizForm from \"./QuizForm\"; // Nhớ đúng đường dẫn file QuizForm\r\n\r\n// ...\r\n\r\n{showQuizModal && (\r\n  <div className=\"quiz-form-container\">\r\n    <QuizForm numberOfQuestions={numberOfQuestions} />\r\n  </div>\r\n)}\r\n\r\nconst quizData = [\r\n  {\r\n    question: \"React là gì?\",\r\n    options: [\r\n      \"Thư viện JavaScript\",\r\n      \"Ngôn ngữ lập trình\",\r\n      \"Hệ điều hành\",\r\n      \"Phần cứng\",\r\n    ],\r\n    answer: \"Thư viện JavaScript\",\r\n  },\r\n  {\r\n    question: \"JSX trong React là gì?\",\r\n    options: [\r\n      \"Java Syntax Extension\",\r\n      \"JavaScript XML\",\r\n      \"JavaScript Extension\",\r\n      \"JSON Syntax\",\r\n    ],\r\n    answer: \"JavaScript XML\",\r\n  },\r\n  {\r\n    question: \"Hook trong React dùng để làm gì?\",\r\n    options: [\"Quản lý state\", \"Tạo component\", \"Xử lý sự kiện\", \"Thêm style\"],\r\n    answer: \"Quản lý state\",\r\n  },\r\n  {\r\n    question: \"Component trong React là gì?\",\r\n    options: [\r\n      \"Một chức năng\",\r\n      \"Một thành phần giao diện\",\r\n      \"Một biến\",\r\n      \"Một đối tượng\",\r\n    ],\r\n    answer: \"Một thành phần giao diện\",\r\n  },\r\n  {\r\n    question: \"State trong React được sử dụng để làm gì?\",\r\n    options: [\r\n      \"Lưu trữ dữ liệu động\",\r\n      \"Định nghĩa CSS\",\r\n      \"Tạo API\",\r\n      \"Làm hiệu ứng\",\r\n    ],\r\n    answer: \"Lưu trữ dữ liệu động\",\r\n  },\r\n  {\r\n    question: \"Props trong React có tác dụng gì?\",\r\n    options: [\r\n      \"Truyền dữ liệu giữa các component\",\r\n      \"Định nghĩa CSS\",\r\n      \"Tạo sự kiện\",\r\n      \"Lưu trữ dữ liệu động\",\r\n    ],\r\n    answer: \"Truyền dữ liệu giữa các component\",\r\n  },\r\n  {\r\n    question: \"React Router dùng để làm gì?\",\r\n    options: [\r\n      \"Quản lý route trong ứng dụng\",\r\n      \"Quản lý state\",\r\n      \"Tạo component\",\r\n      \"Gọi API\",\r\n    ],\r\n    answer: \"Quản lý route trong ứng dụng\",\r\n  },\r\n  {\r\n    question: \"useEffect trong React được dùng để làm gì?\",\r\n    options: [\r\n      \"Xử lý side effect\",\r\n      \"Tạo component\",\r\n      \"Quản lý state\",\r\n      \"Xử lý sự kiện\",\r\n    ],\r\n    answer: \"Xử lý side effect\",\r\n  },\r\n  {\r\n    question: \"React Virtual DOM có tác dụng gì?\",\r\n    options: [\r\n      \"Tăng hiệu suất render\",\r\n      \"Lưu trữ dữ liệu\",\r\n      \"Tạo API\",\r\n      \"Quản lý component\",\r\n    ],\r\n    answer: \"Tăng hiệu suất render\",\r\n  },\r\n  {\r\n    question: \"useState trong React dùng để làm gì?\",\r\n    options: [\r\n      \"Quản lý state\",\r\n      \"Tạo component\",\r\n      \"Xử lý sự kiện\",\r\n      \"Định nghĩa CSS\",\r\n    ],\r\n    answer: \"Quản lý state\",\r\n  },\r\n];\r\n\r\nexport default function QuizApp({ numQuestions }) {\r\n  const [studentInfo, setStudentInfo] = useState({\r\n    name: \"\",\r\n    id: \"\",\r\n    class: \"\",\r\n  });\r\n  const [started, setStarted] = useState(false);\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [selectedOptions, setSelectedOptions] = useState({});\r\n  const [submitted, setSubmitted] = useState(false);\r\n  const [timeLeft, setTimeLeft] = useState(30 * 60); // 30 minutes\r\n  const [questionPage, setQuestionPage] = useState(0);\r\n  const [isMenuVisible, setIsMenuVisible] = useState(false);\r\n\r\n  const questionsPerPage = 5;\r\n\r\n  useEffect(() => {\r\n    if (started && !submitted && timeLeft > 0) {\r\n      const timer = setInterval(() => setTimeLeft((prev) => prev - 1), 1000);\r\n      return () => clearInterval(timer);\r\n    }\r\n  }, [started, submitted, timeLeft]);\r\n\r\n  const handleStart = () => {\r\n    if (studentInfo.name && studentInfo.id && studentInfo.class) {\r\n      setStarted(true);\r\n    } else {\r\n      alert(\"Vui lòng nhập đầy đủ thông tin sinh viên!\");\r\n    }\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    setSubmitted(true);\r\n  };\r\n\r\n  const handleRetry = () => {\r\n    setCurrentQuestion(0);\r\n    setSelectedOptions({});\r\n    setSubmitted(false);\r\n    setStarted(false);\r\n    setTimeLeft(30 * 60);\r\n    setQuestionPage(0);\r\n  };\r\n\r\n  const handleNextPage = () => {\r\n    if ((questionPage + 1) * questionsPerPage < numQuestions) {\r\n      setQuestionPage(questionPage + 1);\r\n    }\r\n  };\r\n\r\n  const handlePrevPage = () => {\r\n    if (questionPage > 0) {\r\n      setQuestionPage(questionPage - 1);\r\n    }\r\n  };\r\n\r\n  const toggleMenu = () => setIsMenuVisible(!isMenuVisible);\r\n\r\n  const score = Object.keys(selectedOptions).reduce(\r\n    (acc, key) =>\r\n      selectedOptions[key] === quizData[key].answer ? acc + 1 : acc,\r\n    0\r\n  );\r\n\r\n  const formatTime = (seconds) => {\r\n    const minutes = Math.floor(seconds / 60);\r\n    const secs = seconds % 60;\r\n    return `${minutes}:${secs < 10 ? \"0\" : \"\"}${secs}`;\r\n  };\r\n\r\n  const displayedQuestions = quizData.slice(0, numQuestions); // Only slice based on the selected questions\r\n\r\n  const getResult = () => {\r\n    const passingScore = Math.ceil(numQuestions / 2); // Consider passing when user gets more than half right\r\n    if (score >= passingScore) {\r\n      return `Chúc mừng! Bạn đã đạt. Điểm của bạn là ${score}/${numQuestions}.`;\r\n    } else {\r\n      return `Bạn chưa đạt. Điểm của bạn là ${score}/${numQuestions}. Cố gắng lần sau!`;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"quiz-container\">\r\n      \r\n      \r\n      {started ? (\r\n        <>\r\n          <div className=\"timer\">Thời gian còn lại: {formatTime(timeLeft)}</div>\r\n          <button className=\"menu-button\" onClick={toggleMenu}>\r\n            &#9776;\r\n          </button>\r\n\r\n          {isMenuVisible && (\r\n            <div className=\"question-menu\">\r\n              \r\n              <ul>\r\n                {displayedQuestions.map((item, index) => (\r\n                  <ul key={index}>\r\n                    <button\r\n                      className={`question-item ${\r\n                        selectedOptions[index] ? \"answered\" : \"unanswered\"\r\n                      } ${currentQuestion === index ? \"active\" : \"\"}`}\r\n                      onClick={() => setCurrentQuestion(index)}\r\n                    >\r\n                      Câu {index + 1}\r\n                    </button>\r\n                    \r\n                  </ul>\r\n                ))}\r\n              </ul>\r\n              <p>chưa trả lời</p>\r\n              <span>đã trả lời</span>\r\n              \r\n             \r\n              \r\n              \r\n              \r\n              \r\n            </div>\r\n            \r\n            \r\n          )}\r\n        \r\n        \r\n          <div className=\"question-card\">\r\n            <h3>\r\n              Câu {currentQuestion + 1}:{\" \"}\r\n              {displayedQuestions[currentQuestion].question}\r\n            </h3>\r\n            <ul className=\"options-list\">\r\n              {displayedQuestions[currentQuestion].options.map(\r\n                (option, index) => (\r\n                  <li key={index} className=\"option-item\">\r\n                    <label>\r\n                      <input\r\n                        type=\"radio\"\r\n                        name={`question-${currentQuestion}`}\r\n                        value={option}\r\n                        checked={selectedOptions[currentQuestion] === option}\r\n                        onChange={() =>\r\n                          setSelectedOptions({\r\n                            ...selectedOptions,\r\n                            [currentQuestion]: option,\r\n                          })\r\n                        }\r\n                      />\r\n                      {option}\r\n                    </label>\r\n                  </li>\r\n                )\r\n              )}\r\n            </ul>\r\n          </div>\r\n\r\n          <div className=\"question-navigation\">\r\n            <button onClick={handlePrevPage} disabled={questionPage === 0}>\r\n              &lt;\r\n            </button>\r\n            {displayedQuestions\r\n              .slice(\r\n                questionPage * questionsPerPage,\r\n                (questionPage + 1) * questionsPerPage\r\n              )\r\n              .map((_, index) => (\r\n                <button\r\n                  key={index}\r\n                  className=\"question-nav-button\"\r\n                  onClick={() =>\r\n                    setCurrentQuestion(questionPage * questionsPerPage + index)\r\n                  }\r\n                >\r\n                  {questionPage * questionsPerPage + index + 1}\r\n                </button>\r\n              ))}\r\n            <button\r\n              onClick={handleNextPage}\r\n              disabled={\r\n                (questionPage + 1) * questionsPerPage >=\r\n                displayedQuestions.length\r\n              }\r\n            >\r\n              &gt;\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"button-container\">\r\n            <button className=\"submit-button\" onClick={handleSubmit}>\r\n              Nộp bài\r\n            </button>\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <div className=\"student-info\">\r\n          <h3>Nhập thông tin sinh viên</h3>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Họ và tên\"\r\n            value={studentInfo.name}\r\n            onChange={(e) =>\r\n              setStudentInfo({ ...studentInfo, name: e.target.value })\r\n            }\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Mã sinh viên\"\r\n            value={studentInfo.id}\r\n            onChange={(e) =>\r\n              setStudentInfo({ ...studentInfo, id: e.target.value })\r\n            }\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Tên Lớp\"\r\n            value={studentInfo.class}\r\n            onChange={(e) =>\r\n              setStudentInfo({ ...studentInfo, class: e.target.value })\r\n            }\r\n          />\r\n          <button className=\"start-button\" onClick={handleStart}>\r\n            Bắt đầu thi\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      {/* Show the result after submission */}\r\n      {submitted && (\r\n        <div className=\"result\">\r\n          <h3>Kết quả thi</h3>\r\n          <p>Họ và tên: {studentInfo.name}</p>\r\n          <p>Mã sinh viên: {studentInfo.id}</p>\r\n          <p>Lớp: {studentInfo.class}</p>\r\n          <p>{getResult()}</p>\r\n          <button className=\"retry-button\" onClick={handleRetry}>\r\n            Thử lại\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}